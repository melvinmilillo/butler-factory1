name: üöÄ Content Factory (Bulletproof)

on:
  workflow_dispatch:
    inputs:
      model_choice:
        description: '–ö–∞–∫—É—é –º–æ–¥–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏?'
        required: true
        default: 'gemini'
        type: choice
        options:
        - gemini
        - deepseek
      batch_size_per_thread:
        description: '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ö–ê–ñ–î–´–ú –ø–æ—Ç–æ–∫–æ–º?'
        required: true
        default: '10'
      threads:
        description: '–°–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç—å –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û (1-20)?'
        required: true
        default: '5'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Create thread matrix
        id: set_matrix
        run: |
          MAX_THREADS=20
          REQUESTED_THREADS=${{ github.event.inputs.threads || 5 }}
          
          if (( REQUESTED_THREADS > MAX_THREADS )); then
            echo "::warning::–ó–∞–ø—Ä–æ—à–µ–Ω–æ –±–æ–ª—å—à–µ –ø–æ—Ç–æ–∫–æ–≤ (${REQUESTED_THREADS}), —á–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ –∫–ª—é—á–µ–π (${MAX_THREADS}). –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${MAX_THREADS}."
            REQUESTED_THREADS=$MAX_THREADS
          fi

          MATRIX=$(jq -cn --argjson n "$REQUESTED_THREADS" '[range(1; $n + 1)]')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  generate_and_publish:
    needs: prepare
    permissions:
      contents: write
      
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        thread: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo (Thread ${{ matrix.thread }})
        uses: actions/checkout@v4
        with:
          # –í–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—É—à–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Setup Node.js (Thread ${{ matrix.thread }})
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: üì¶ Install dependencies (Thread ${{ matrix.thread }})
        run: npm install

      - name: üîë Set API Key for Thread ${{ matrix.thread }}
        id: set_key
        run: |
          MODEL_CHOICE="${{ github.event.inputs.model_choice || 'gemini' }}"
          if [ "$MODEL_CHOICE" == "deepseek" ]; then
            API_KEYS="${{ secrets.OPENROUTER_API_KEYS_POOL }}"
          else
            API_KEYS="${{ secrets.GEMINI_API_KEYS_POOL }}"
          fi
          
          CURRENT_KEY=$(echo "$API_KEYS" | sed -n '${{ matrix.thread }}p' | tr -d '\r')

          if [[ -z "$CURRENT_KEY" ]]; then
            echo "::error::–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å API-–∫–ª—é—á –¥–ª—è –ø–æ—Ç–æ–∫–∞ #${{ matrix.thread }} –¥–ª—è –º–æ–¥–µ–ª–∏ ${MODEL_CHOICE}."
            exit 1
          fi
          echo "key=$CURRENT_KEY" >> $GITHUB_OUTPUT

      - name: üè≠ Run Factory (Thread ${{ matrix.thread }})
        env:
          MODEL_CHOICE: ${{ github.event.inputs.model_choice || 'gemini' }}
          API_KEY_CURRENT: ${{ steps.set_key.outputs.key }}
          BATCH_SIZE: ${{ github.event.inputs.batch_size_per_thread || 10 }}
          TOTAL_THREADS: ${{ github.event.inputs.threads || 5 }}
          THREAD_ID: ${{ matrix.thread }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          
          echo "--- –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é ---"
          
          npm run factory
          
          echo "‚úÖ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –ú–∏—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
