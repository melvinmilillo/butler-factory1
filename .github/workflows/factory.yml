name: üöÄ Content Factory (Central Dispatch)

on:
  workflow_dispatch:

jobs:
  # --- –ó–ê–î–ê–ß–ê ‚Ññ1: "–î–ò–°–ü–ï–¢–ß–ï–†" - –°–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á ---
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
      
      - name: üìù Generate job list
        id: set-matrix
        run: |
          ALL_TOPICS=$(cat topics.txt | jq -R . | jq -s .)
          EXISTING_FILES=$(ls src/content/posts | jq -R . | jq -s .)
          
          # –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º jq –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏. –≠—Ç–æ —Å–ª–æ–∂–Ω–∞—è, –Ω–æ –Ω–∞–¥–µ–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.
          # –û–Ω–∞ –±–µ—Ä–µ—Ç –≤—Å–µ —Ç–µ–º—ã, –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã, –ø—Ä–∏–≤–æ–¥–∏—Ç –∏—Ö –∫ –æ–¥–Ω–æ–º—É –≤–∏–¥—É –∏ –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞–∑–Ω–∏—Ü—É.
          NEW_TOPICS=$(jq -n --argjson all_topics "$ALL_TOPICS" --argjson existing_files "$EXISTING_FILES" \
            '($existing_files | map( sub(".md$"; "") )) as $slugs |
             $all_topics | map(select(. != "" and . != null)) |
             map(select(IN($slugs; (. | ascii_downcase | gsub(" "; "-") | gsub("[^a-z0-9-]"; ""))) | not))')

          echo "–ù–∞–π–¥–µ–Ω–æ $(echo $NEW_TOPICS | jq 'length') –Ω–æ–≤—ã—Ö —Ç–µ–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."
          echo "matrix=$(echo $NEW_TOPICS | jq -c .)" >> $GITHUB_OUTPUT

  # --- –ó–ê–î–ê–ß–ê ‚Ññ2: "–†–ê–ë–û–ß–ò–ï" - –í—ã–ø–æ–ª–Ω—è—é—Ç –ø—Ä–∏–∫–∞–∑—ã –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---
  generate:
    needs: prepare
    if: needs.prepare.outputs.matrix != '[]'
    permissions:
      contents: write
      
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        # –ö–∞–∂–¥—ã–π –ø–æ—Ç–æ–∫ –±–µ—Ä–µ—Ç –û–î–ù–£ —Ç–µ–º—É –∏–∑ —Å–ø–∏—Å–∫–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ "–î–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º"
        topic: ${{ fromJson(needs.prepare.outputs.matrix) }}
        key_index: ${{ fromJson(format('[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]')) }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
      
      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üîë Set API Key
        id: set_key
        run: |
          API_KEYS="${{ secrets.GEMINI_API_KEYS_POOL }}"
          KEY_COUNT=$(echo "$API_KEYS" | wc -l)
          # –ë–µ—Ä–µ–º –∫–ª—é—á –ø–æ –∫—Ä—É–≥—É, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ 20 –∫–ª—é—á–µ–π
          CURRENT_KEY_INDEX=$(( (${{ matrix.key_index }} % $KEY_COUNT) + 1 ))
          CURRENT_KEY=$(echo "$API_KEYS" | sed -n "${CURRENT_KEY_INDEX}p" | tr -d '\r')
          echo "key=$CURRENT_KEY" >> $GITHUB_OUTPUT

      - name: üè≠ Run Factory for "${{ matrix.topic }}"
        env:
          GEMINI_API_KEY: ${{ steps.set_key.outputs.key }}
          TOPIC: ${{ matrix.topic }}
        run: npm run factory
        
  # --- –ó–ê–î–ê–ß–ê ‚Ññ3: "–§–ò–ù–ê–õ–¨–ù–´–ô –ê–ö–ö–û–†–î" - –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏ –î–æ–∫–ª–∞–¥ ---
  publish:
    needs: [prepare, generate]
    if: always() # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –¥–∞–∂–µ —á–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üöÄ Commit and Push All New Posts
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'

          if [[ -z $(git status --porcelain "src/content/posts/") ]]; then
            echo "‚úÖ –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
            exit 0
          fi
          
          git add src/content/posts/*.md
          git commit -m "üöÄ –ê–≤—Ç–æ-–ø—É–±–ª–∏–∫–∞—Ü–∏—è: –Ω–æ–≤–∞—è –ø–∞—á–∫–∞ —Å—Ç–∞—Ç–µ–π"
          git pull --rebase
          git push

      - name: üì¢ Notify IndexNow
        if: success() # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ push –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
        run: |
          NEW_FILES=$(git diff --name-only HEAD~1 HEAD -- 'src/content/posts/*.md')
          if [[ -z "$NEW_FILES" ]]; then exit 0; fi
          
          URL_JSON_ARRAY=$(for file in $NEW_FILES; do slug=$(basename "$file" .md); echo "https://butlerspb-blog.netlify.app/blog/${slug}/"; done | jq -R . | jq -s .)
          
          API_KEY="d1b055ab1eb146d892169bbb2c96550e"
          HOST="butlerspb-blog.netlify.app"

          JSON_PAYLOAD=$(jq -n \
                          --arg host "$HOST" \
                          --arg key "$API_KEY" \
                          --argjson urls "$URL_JSON_ARRAY" \
                          '{host: $host, key: $key, urlList: $urls}')
          
          echo "--- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –Ø–Ω–¥–µ–∫—Å –∏ Bing ---"
          curl -X POST "https://yandex.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
          curl -X POST "https://www.bing.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
