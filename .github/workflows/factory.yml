name: üöÄ Content Factory (Bulletproof Batch Push v3)

on:
  workflow_dispatch:
    inputs:
      model_choice:
        description: '–ö–∞–∫—É—é –º–æ–¥–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏?'
        required: true
        default: 'gemini'
        type: choice
        options:
        - gemini
        - deepseek
      batch_size_per_thread:
        description: '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ö–ê–ñ–î–´–ú –ø–æ—Ç–æ–∫–æ–º?'
        required: true
        default: '10'
      threads:
        description: '–°–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç—å –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û (1-20)?'
        required: true
        default: '5'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Create thread matrix
        id: set_matrix
        run: |
          MAX_THREADS=20
          REQUESTED_THREADS=${{ github.event.inputs.threads || 5 }}
          
          if (( REQUESTED_THREADS > MAX_THREADS )); then
            echo "::warning::–ó–∞–ø—Ä–æ—à–µ–Ω–æ –±–æ–ª—å—à–µ –ø–æ—Ç–æ–∫–æ–≤ (${REQUESTED_THREADS}), —á–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ –∫–ª—é—á–µ–π (${MAX_THREADS}). –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${MAX_THREADS}."
            REQUESTED_THREADS=$MAX_THREADS
          fi

          MATRIX=$(jq -cn --argjson n "$REQUESTED_THREADS" '[range(1; $n + 1)]')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  generate:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        thread: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üîë Set API Key
        id: set_key
        run: |
          MODEL_CHOICE="${{ github.event.inputs.model_choice || 'gemini' }}"
          if [ "$MODEL_CHOICE" == "deepseek" ]; then
            API_KEYS="${{ secrets.OPENROUTER_API_KEYS_POOL }}"
          else
            API_KEYS="${{ secrets.GEMINI_API_KEYS_POOL }}"
          fi
          CURRENT_KEY=$(echo "$API_KEYS" | sed -n '${{ matrix.thread }}p' | tr -d '\r')
          if [[ -z "$CURRENT_KEY" ]]; then
            echo "::error::–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å API-–∫–ª—é—á –¥–ª—è –ø–æ—Ç–æ–∫–∞ #${{ matrix.thread }}."
            exit 1
          fi
          echo "key=$CURRENT_KEY" >> $GITHUB_OUTPUT

      - name: üè≠ Run Factory (Thread ${{ matrix.thread }})
        env:
          MODEL_CHOICE: ${{ github.event.inputs.model_choice || 'gemini' }}
          API_KEY_CURRENT: ${{ steps.set_key.outputs.key }}
          BATCH_SIZE: ${{ github.event.inputs.batch_size_per_thread || 10 }}
          TOTAL_THREADS: ${{ github.event.inputs.threads || 5 }}
          THREAD_ID: ${{ matrix.thread }}
        run: npm run factory

      - name: üì§ Upload generated articles
        uses: actions/upload-artifact@v4
        with:
          name: generated-posts-thread-${{ matrix.thread }}
          path: src/content/posts/*.md
          if-no-files-found: ignore

  publish_and_notify:
    if: ${{ always() }} 
    needs: generate
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üì• Download all generated articles
        uses: actions/download-artifact@v4
        with:
          path: src/content/posts
          merge-multiple: true

      - name: üöÄ Commit, Push & Notify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --global pull.rebase true

          if [[ -z $(git status --porcelain src/content/posts/) ]]; then
            echo "‚úÖ –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
            exit 0
          fi

          echo "üî• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏..."
          git pull
          
          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω–Ω–æ –Ω–æ–≤—ã—Ö, –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
          NEW_FILES=$(git status --porcelain src/content/posts/ | grep '^??' | awk '{print $2}')
          
          git add src/content/posts/*.md
          git commit -m "üöÄ –ê–≤—Ç–æ-–ø—É–±–ª–∏–∫–∞—Ü–∏—è: –ø–∞–∫–µ—Ç–Ω–∞—è —Å–±–æ—Ä–∫–∞"
          
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è push
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:main

          if [[ -n "$NEW_FILES" ]]; then
            echo "üì¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è IndexNow..."
            API_KEY="d1b055ab1eb146d892169bbb2c96550e"
            HOST="butlerspb-blog.netlify.app"
            URL_JSON_ARRAY=$(for file in $NEW_FILES; do slug=$(basename "$file" .md); echo "https://butlerspb-blog.netlify.app/blog/${slug}/"; done | jq -R . | jq -s .)
            JSON_PAYLOAD=$(jq -n --arg host "$HOST" --arg key "$API_KEY" --argjson urls "$URL_JSON_ARRAY" '{host: $host, key: $key, urlList: $urls}')
            
            echo "--- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–∞–∫–µ—Ç–∞ –¥–ª—è IndexNow ---"
            echo "$JSON_PAYLOAD"
            echo "--- –ö–æ–Ω–µ—Ü –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---"
            
            curl -X POST "https://yandex.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
            curl -X POST "https://www.bing.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
          fi
          
          echo -e "\n‚úÖ –ú–∏—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
