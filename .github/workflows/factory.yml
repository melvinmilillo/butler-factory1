name: üöÄ Content Factory (Unified Arsenal)

on:
  workflow_dispatch:
    inputs:
      batch_size_per_thread:
        description: '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ö–ê–ñ–î–´–ú –ø–æ—Ç–æ–∫–æ–º?'
        required: true
        default: '10'
      threads:
        description: '–°–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç—å –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û?'
        required: true
        default: '5'

jobs:
  generate_and_publish:
    permissions:
      contents: write
      
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        thread: ${{ fromJson(format('[{0}]', range(1, github.event.inputs.threads + 1))) }}

    steps:
      - name: ‚¨áÔ∏è Checkout repo (Thread ${{ matrix.thread }})
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: ‚öôÔ∏è Setup Node.js (Thread ${{ matrix.thread }})
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: üì¶ Install dependencies (Thread ${{ matrix.thread }})
        run: npm install

      - name: üîë Set API Key for Thread ${{ matrix.thread }}
        id: set_key
        run: |
          API_KEYS="${{ secrets.GEMINI_API_KEYS_POOL }}"
          KEY_INDEX=$((${{ matrix.thread }} - 1))
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º sed –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–æ–∫–∏. awk - –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
          CURRENT_KEY=$(echo "$API_KEYS" | awk "NR==${{ matrix.thread }}")
          if [[ -z "$CURRENT_KEY" ]]; then
            echo "::error::–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å API-–∫–ª—é—á –¥–ª—è –ø–æ—Ç–æ–∫–∞ #${{ matrix.thread }}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–∫—Ä–µ—Ç GEMINI_API_KEYS_POOL."
            exit 1
          fi
          echo "key=$CURRENT_KEY" >> $GITHUB_OUTPUT

      - name: üè≠ Run Factory & üì¢ Publish & Notify (Thread ${{ matrix.thread }})
        env:
          GEMINI_API_KEY_CURRENT: ${{ steps.set_key.outputs.key }}
          BATCH_SIZE: ${{ github.event.inputs.batch_size_per_thread }}
          TOTAL_THREADS: ${{ github.event.inputs.threads }}
          THREAD_ID: ${{ matrix.thread }}
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'
          
          echo "--- –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é ---"
          
          git pull --rebase

          commit_before=$(git rev-parse HEAD)
          
          npm run factory
          
          if [[ -z $(git status --porcelain) ]]; then
            echo "‚úÖ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ú–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
            exit 0
          fi

          echo "üî• –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã. –ü—É–±–ª–∏–∫—É—é –ø–∞—á–∫—É..."
          git add src/content/posts/*.md
          git commit -m "üöÄ –ê–≤—Ç–æ-–ø—É–±–ª–∏–∫–∞—Ü–∏—è: –ø–∞—á–∫–∞ –æ—Ç –≠—Å–∫–∞–¥—Ä–æ–Ω–∞ ‚Ññ${{ matrix.thread }}"
          
          git pull --rebase
          git push
          
          commit_after=$(git rev-parse HEAD)

          NEW_FILES=$(git diff --name-only $commit_before $commit_after -- 'src/content/posts/*.md')
          
          URL_LIST=""
          for file in $NEW_FILES; do
            slug=$(basename $file .md)
            url="https://butlerspb-blog.netlify.app/blog/${slug}/"
            URL_LIST="${URL_LIST}${url}\n"
          done

          if [[ -n "$URL_LIST" ]]; then
            echo "üì¢ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ IndexNow..."
            API_KEY="d1b055ab1eb146d892169bbb2c96550e"
            HOST="butlerspb-blog.netlify.app"
            
            JSON_PAYLOAD=$(jq -n \
                            --arg host "$HOST" \
                            --arg key "$API_KEY" \
                            --arg urls_string "$URL_LIST" \
                            '{host: $host, key: $key, urlList: ($urls_string | split("\n") | map(select(length > 0)))}'
                            )
            
            curl -X POST "https://yandex.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
            curl -X POST "https://www.bing.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
          fi
          
          echo -e "\n‚úÖ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread }}: –ú–∏—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
