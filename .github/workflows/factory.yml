name: üöÄ Content Factory (Immediate Notify + Diagnostics)

on:
  workflow_dispatch:
    inputs:
      batch_size:
        description: '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞ 1 –∏—Ç–µ—Ä–∞—Ü–∏—é?'
        required: true
        default: '1'
      iterations:
        description: '–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–≤–µ–π–µ—Ä?'
        required: true
        default: '10'

jobs:
  build:
    permissions:
      contents: write
      
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üè≠ Run Content Factory Conveyor
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          BATCH_SIZE: ${{ github.event.inputs.batch_size }}
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.**com**'
          
          for i in $(seq 1 ${{ github.event.inputs.iterations }})
          do
            echo "--- –ö–û–ù–í–ï–ô–ï–†: –ó–∞–ø—É—Å–∫ –∏—Ç–µ—Ä–∞—Ü–∏–∏ $i –∏–∑ ${{ github.event.inputs.iterations }} ---"
            
            commit_before=$(git rev-parse HEAD)
            
            npm run factory
            
            if [[ -z $(git status --porcelain) ]]; then
              echo "‚úÖ –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –≤ —ç—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –Ω–µ—Ç. –†–∞–±–æ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
              break
            fi

            echo "üî• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã. –î–æ–±–∞–≤–ª—è—é –≤ –∏–Ω–¥–µ–∫—Å –∏ –≤—ã–ø–æ–ª–Ω—è—é –∫–æ–º–º–∏—Ç..."
            git add .
            git commit -m "üöÄ –ê–≤—Ç–æ-–ø—É–±–ª–∏–∫–∞—Ü–∏—è: –ø–∞—á–∫–∞ —Å—Ç–∞—Ç–µ–π ‚Ññ$i"

            echo "–í—ã–ø–æ–ª–Ω—è—é push..."
            git pull --rebase
            git push
            
            commit_after=$(git rev-parse HEAD)

            NEW_FILES=$(git diff --name-only $commit_before $commit_after -- 'src/content/posts/*.md')
            
            URL_LIST=""
            for file in $NEW_FILES; do
              slug=$(basename $file .md)
              url="https://butlerspb-blog.netlify.app/blog/${slug}/"
              URL_LIST="${URL_LIST}${url}\n"
            done

            if [[ -n "$URL_LIST" ]]; then
              # --- –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –ë–õ–û–ö –í–ù–£–¢–†–ò –¶–ò–ö–õ–ê ---
              echo "--- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ URL –¥–ª—è –ø–∞—á–∫–∏ ‚Ññ$i ---"
              echo "${URL_LIST}" | cat -ET
              echo "--- –ö–æ–Ω–µ—Ü –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---"

              echo "üì¢ –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –≤ IndexNow..."
              API_KEY="d1b055ab1eb146d892169bbb2c96550e"
              HOST="butlerspb-blog.netlify.app"
              
              JSON_PAYLOAD=$(jq -n \
                              --arg host "$HOST" \
                              --arg key "$API_KEY" \
                              --arg urls_string "$URL_LIST" \
                              '{host: $host, key: $key, urlList: ($urls_string | split("\n") | map(select(length > 0)))}'
                              )
              
              echo "--- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –Ø–Ω–¥–µ–∫—Å ---"
              curl -X POST "https://yandex.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
              
              echo -e "\n--- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Bing ---"
              curl -X POST "https://www.bing.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
            fi
            
            echo -e "\n‚úÖ –ü–∞—á–∫–∞ $i —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ IndexNow."
          done
